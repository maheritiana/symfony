security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        gdm\UserBundle\Entity\User: plaintext
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_AUTEUR, ROLE_MODERATEUR] # Un admin hérite des droits d'auteur et de modérateur
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH] # On garde ce rôle superadmin, il nous resservira par la suite

    providers:
        main:
            entity: { class: gdm\UserBundle\Entity\User, property:username }
        in_memory:
            memory:
                users:
                    user: { password: userpass, roles: ['ROLE_USER' ] }
                    admin: { password: adminpass, roles: ['ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # On crée un pare-feu uniquement pour le formulaire
        main_login:
            # Cette expression régulière permet de prendre /login (mais pas /login_check !)
            pattern: ^/login$
            anonymous: true # On autorise alors les anonymes sur ce pare-feu
        main:
            pattern: ^/
            anonymous: true
            provider:  in_memory
            form_login:
                login_path: login
                check_path: login_check
            logout:
                path: logout
                target: /blog

    access_control:
        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
